/** 
 * Create the Time Constructor here to calculate the Times
 * for the TwoFlightTrip
 * 
 * @author Vedhasya Muvva, Suzy Schwabl, Carolyn Glasener
 * @version (2019-09-23)
 */

public class Time
{
    private int hours;
    private int minutes;
    private int totalSeconds;
    
    /**
     * Constructor for objects class Time
     * @param  hours            This is the hours
     * @param  minutes          This is the minutes
     * @param  totalSeconds     This is the total seconds in the time
     */
    
   public Time(int hours, int minutes)
    {
        this.hours = hours;
        this.minutes = minutes;
        calculateTotalSeconds(hours, minutes);
    }
    
    /**
     * gets the total number of seconds from the hours and minutes
     * @param hours   the hours of the time
     * @param minutes the minutes of the time
     */
   public int calculateTotalSeconds(int hours, int minutes)
    {
        totalSeconds = (3600 * hours) + (60 * minutes);
        return totalSeconds;
    }
    
     /**
      * converts the total seconds back into minutes and hours
      * @param totalSeconds  the total number of total seconds
      */
   public Time (int totalSeconds) //returns the new time
    {
       hours = totalSeconds/3600;
       minutes = (totalSeconds % 3600)/60;
       this.totalSeconds = totalSeconds;
    }
   /**
    * get the time elapsed between the other time
    * @param Time other   the second time out of the two times
    * @return new time based on the number of elapsed seconds
    */
    public Time elapsedSeconds(Time other)
    {
        int elapsedSeconds = other.totalSeconds - this.totalSeconds;
        return new Time(elapsedSeconds);
    }
    
    /**
     * get the total number of seconds from the departure time
     * and the arrival time
     * @param Time other   the seconds time out of the two times
     */
   public void addTime(Time other)
    {
        int newSeconds = this.totalSeconds + other.getTotalSeconds();
        this.totalSeconds = (newSeconds % 86400);
    }
   
    /**
     * gets the hours
     * @return the numbers of hours in the time
     */
    public int gethours()
    {
        return totalSeconds/3600;
    }
    
    /**
     * gets the mintes
     * @return the numbers of minutes in the time
     */
   public int getminutes()
    {
        return (totalSeconds % 3600)/60;
    }
    
    /**
     * gets the seconds
     * @return the numbers of total seconds in the time
     */
   public int getTotalSeconds()
    {
        return totalSeconds;
    }
    
    /**
     * returns a two digit number
     * @param   n the inputted integer
     * @return the number with a zero in front if the number is less than 10
     */
    private String to2Digits(int n)
    {
        if (n < 10)
        {
            return "0" + n;
        }
        else
        {
            return "" + n;
        }
    }
    
    /**
     * phrases the time in a more readable format
     * @return the time with a colon
     */
   public String toString()
    {
        return to2Digits(gethours()) + ":" + to2Digits(getminutes());
    }
}
